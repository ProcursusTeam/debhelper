#!/usr/bin/perl

=head1 NAME

dh_auto_clean - automatically cleans up after a build

=cut

use strict;
use warnings;
use Debian::Debhelper::Dh_Lib;
use Debian::Debhelper::Dh_Buildsystems;

our $VERSION = DH_BUILTIN_VERSION;

=head1 SYNOPSIS

B<dh_auto_clean> [S<I<build system options>>] [S<I<debhelper options>>] [S<B<--> I<params>>]

=head1 DESCRIPTION

B<dh_auto_clean> is a debhelper program that tries to automatically clean up
after a package build. It does so by running the appropriate command for
the build system it detects the package uses. For example, if there's a
F<Makefile> and it contains a B<distclean>, B<realclean>, or B<clean> target,
then this is done by running B<make> (or B<MAKE>, if the environment variable is
set). If there is a F<setup.py> or F<Build.PL>, it is run to clean the package.

This is intended to work for about 90% of packages. If it doesn't work, or
tries to use the wrong clean target, you're encouraged to skip using
B<dh_auto_clean> at all, and just run B<make clean> manually.

=head1 OPTIONS

See L<debhelper(7)/B<BUILD SYSTEM OPTIONS>> for a list of common build
system selection and control options.

=over 4

=item B<--buildlabel=>I<label>

Set the label for this command.  If all packages related to the chosen label is
skipped, the command will skip the build.

Should only be used if the package relies on the multiple builds feature.

=item B<--> I<params>

Pass I<params> to the program that is run, after the parameters that
B<dh_auto_clean> usually passes.

=back

=cut

# PROMISE: DH NOOP WITHOUT cli-options(BUILDSYSTEM) buildsystem(clean)

inhibit_log();
buildsystems_init();
buildsystems_do();

=head1 SEE ALSO

L<debhelper(7)>

This program is a part of debhelper.

=head1 AUTHOR

Joey Hess <joeyh@debian.org>

=cut
